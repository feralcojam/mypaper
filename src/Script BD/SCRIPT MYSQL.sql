create database mypaper;
use mypaper;
create table USUARIO (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    NOMBRE TEXT NOT NULL,
    CONTRASEÑA TEXT NOT NULL,
    ACTIVO TINYINT(1) NOT NULL
);
CREATE TABLE PRODUCTO (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    NOMBRE TEXT NOT NULL,
    ID_PROVEEDOR INT NOT NULL,
    CANTIDAD INT NOT NULL,
    PRECIO DOUBLE NOT NULL
);
CREATE TABLE PROVEEDOR (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ID_PRODUCTO INT NOT NULL,
    NOMBRE TEXT NOT NULL,
    MARCA TEXT NOT NULL,
    UBICACION TEXT NOT NULL
);
CREATE TABLE HISTORIAL_PRODUCTO (
	ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ID_PRODUCTO INT NOT NULL,
    ID_USUARIO INT NOT NULL,
    OPERACION TEXT NOT NULL,
    FECHA TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
 /*Procedimiento almacenado para activar un usuario y desactivar otros*/
DELIMITER //

CREATE PROCEDURE ACTIVAR_USUARIO(IN ID_USUARIO INT)
BEGIN
    UPDATE USUARIO SET ACTIVO = 1 WHERE ID = ID_USUARIO;
    UPDATE USUARIO SET ACTIVO = 0 WHERE NOT ID = ID_USUARIO;
END //

DELIMITER ;
/*Ejemplo de llamada*/
CALL ACTIVAR_USUARIO (1);

/*Procedimiento de buscar un usuario*/
DELIMITER //

CREATE PROCEDURE Buscar_Usuario(IN nombre_usuario text, IN contrasena_usuario text)
BEGIN
    SELECT * FROM USUARIO WHERE NOMBRE = nombre_usuario AND CONTRASEÑA = contrasena_usuario;
END //

DELIMITER ;
/*Ejemplo de llamada*/
CALL Buscar_Usuario ('Mayorga','1234');

/*Trigger para saber quien inserta un elemento*/
DELIMITER //

CREATE TRIGGER TRIGGER_INSERTAR
AFTER INSERT ON HISTORIAL_PRODUCTO
FOR EACH ROW
BEGIN
	DECLARE ID_USUARIO INT;
    SELECT ID INTO ID_USUARIO FROM USUARIO WHERE ACTIVO = 1;
    INSERT INTO HISTORIAL_PRODUCTO VALUES (0,NEW.ID,ID_USUARIO,'INSERCIÓN');
END //

DELIMITER ;

/*Trigger despues de actualizar*/
DELIMITER //

CREATE TRIGGER TRIGGER_ACTUALIZAR
AFTER UPDATE ON HISTORIAL_PRODUCTO
FOR EACH ROW
BEGIN
    DECLARE ID_USUARIO INT;
    SELECT ID INTO ID_USUARIO FROM USUARIO WHERE ACTIVO = 1;
    INSERT INTO HISTORIAL_PRODUCTO VALUES (0, NEW.ID, ID_USUARIO, 'ACTUALIZACIÓN');
END //

DELIMITER ;

/*trigger de eliminacion*/
DELIMITER //

CREATE TRIGGER TRIGGER_ELIMINAR
AFTER DELETE ON HISTORIAL_PRODUCTO
FOR EACH ROW
BEGIN
    DECLARE ID_USUARIO INT;
    SELECT ID INTO ID_USUARIO FROM USUARIO WHERE ACTIVO = 1;
    INSERT INTO HISTORIAL_PRODUCTO VALUES (0, OLD.ID, ID_USUARIO, 'ELIMINACIÓN');
END //

DELIMITER ;

/*Parte 2 en proceso*/